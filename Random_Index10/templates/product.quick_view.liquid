{% layout none %}

{% if template == "product.leftsidebar" or template == "product.rightsidebar" %}
  {% assign viewtype = 'has_sidebar' %}
{% else %}
  {% if settings.type_sidebar_product != 'sidebar_hidden' %}
    {% assign viewtype = 'has_sidebar' %}
  {% else %}
    {% assign viewtype = 'no_sidebar' %}
  {% endif %}
{% endif %}


<div class="product-template__container page-width" itemscope itemtype="http://schema.org/Product" id="ProductSection-templateQV" data-enable-history-state="true" data-type="product-template" data-wishlist-product>
  {% assign variantCount = product.variants | size %}
  {%- assign current_variant = product.selected_or_first_available_variant -%}

  {%- assign product_image = '900x900' -%}
  {%- assign product_image_zoom_size = '1024x1024' -%}
  {%- assign enable_zoom = false -%}

  <div class="product-single row no-gutters"{% if enable_zoom == true %} data-product_layout_thumb="zoom" data-zoom_scroll="true" data-zoom_contain_lens="true" data-zoomtype="inner" data-lenssize="200" data-lensshape="square" data-lensborder="1" data-bordersize="2" data-bordercolour="#f9b61e" data-popup="true"{% endif %}>
    <div class="product-single__photos col-pr-xl-6 col-lg-6 col-md-6 col-xs-12 thumb-vertical flex-row-reverse">
      {% if product.images.size > 0 %}
        <div id="productThumbs">
          <div class="thumblist" data-pswp-uid="1">
            <div class="owl-carousel owl-theme" data-autoplay="false" data-autoplayTimeout="6000" data-items="1" data-margin="0" data-nav="true" data-dots="false" data-loop="false" data-items_tablet="1" data-items_mobile="1">
              {% for image in product.images %}
                <div class="thumbItem" data-image-id="{{ image.id }}" data-position="{{ forloop.index | minus: 1 }}">
                  <a href="javascript:void(0)" data-image="{{ image.src | img_url: product_image }}" data-zoom-image="{{ image.src | img_url: product_image_zoom_size }}" class="product-single__thumbnail">
                    <div class="respone_image" style="padding-top:{{ 1 | divided_by: product.featured_image.aspect_ratio | times: 100}}%">
                      {% assign img_second = image.src | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
                      <img class="img-responsive lazyload"
                        src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3C/svg%3E"
                        data-src="{{ img_second }}"
                        data-img="{{ img_second }}"
                        data-widths="[360, 540, 720, 900, 1080, 1296, 1512, 1728, 1944, 2048, 4472]"
                        data-aspectratio="{{ product.featured_image.aspect_ratio }}"
                        data-sizes="auto"
                        alt=""
                        data-image>
                    </div>
                  </a>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>
      {% endif %}
    </div>
    <div class="product-single__info col-in-xl-6 col-lg-6 col-md-6 col-xs-12 mt-xs-40">
      <h1 itemprop="name" class="product-single__title">{{ product.title }}</h1>
      <div class="product-single__meta">
        <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
          <p class="product-single__price product-single__price-qv{% unless current_variant.available %} product-price--sold-out{% endunless %} d-flex align-items-center">
            {% if current_variant.compare_at_price > current_variant.price %}
              <span class="hidden">{{ 'products.product.regular_price' | t }}</span>
              <span class="product-price__price product-price__price-qv product-price__sale product-price__sale--single">
                <span id="ProductPrice-qv"
                  itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}" class="money">
                  {{ current_variant.price | money }}
                </span>
                <span class="money product-price__sale-label product-price__sale-label-qv d-none">{{ 'products.product.on_sale' | t }}</span>
              </span>
              <s id="ComparePrice-qv" class="ml-25">{{ current_variant.compare_at_price | money }}</s>
            {% else %}
              <span class="hidden">{{ 'products.product.regular_price' | t }}</span>
              <span class="product-price__price product-price__price-qv">
                <span id="ProductPrice-qv"
                  itemprop="price" content="{{ current_variant.price | divided_by: 100.00 }}" class="money">
                  {{ current_variant.price | money }}
                </span>
                <span class="money product-price__sale-label product-price__sale-label-qv d-none">{{ 'products.product.on_sale' | t }}</span>
              </span>
              <s id="ComparePrice-qv" class="ml-25">{{ current_variant.compare_at_price | money }}</s>
            {% endif %}
          </p>

          {% if settings.show_rating %}
            <div class="group-reviews has-border d-flex align-items-center">
              <div class="detail-reviews">
                <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
              </div>
            </div>
          {% endif %}

          {% unless product.available %}
            <div class="available_product d-flex">
              <span class="label available_name">{{ "products.product.availability" | t }} :</span>
              <span class="product__available sold-out d-flex align-items-center">
                <span>{{ "products.product.sold_out" | t }}</span>
                <i class="fa fa-ban" aria-hidden="true"></i>
              </span>
            </div>
          {% else %}
            <div class="available_product d-flex">
              <span class="label available_name">{{ "products.product.availability" | t }} :</span>
              <span class="product__available in-stock d-flex align-items-center">
                <span>{{ "products.product.in_stock" | t }}</span>
                <i class="fa fa-check-square-o" aria-hidden="true"></i>
              </span>
            </div>
          {% endunless %}

          <div class="group-single has-border">
              <p itemprop="sku" class="product-single__sku">
                <span class="label">{{ 'products.product.lable_sku' | t }}:</span>
                <span class="label-sku variant-sku">{{ current_variant.sku }}</span>
              </p>
              <p itemprop="cat" class="product-single__cat">
                <span class="label">{{ 'products.product.lable_collections' | t }}:</span>
                <span class="pr-lt__collec">
                  {% for collection in product.collections %}
                  	{% if collection.title != 'Upsell' %}
                      {% if forloop.last == true %}
                        <a href="{{ collection.url }}" title="{{ collection.title }}">{{ collection.title }}</a>
                      {% else %}
                        <a href="{{ collection.url }}" title="{{ collection.title }}">{{ collection.title }}</a>,
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                </span>
              </p>
              <p itemprop="tags" class="product-single__tags">
                <span class="label">{{ 'products.product.lable_tags' | t }}:</span>
                <span class="pr-lt__tags">
                  {% for tag in product.tags %}
                  	{% if tag != 'upsell' %}
                      {% capture url %}/collections/all/{{ tag | handle }}{% endcapture %}
                      {% if forloop.last == true %}
                        {{ tag | link_to: url }}
                      {% else %}
                        {{ tag | link_to: url }},
                      {% endif %}
                    {% endif %}
                  {% endfor %}
                </span>
              </p>
            
            <div class="short-desc">{{ product.description | truncate: 150 }}</div>
          </div>

          <form action="/cart/add" method="post" enctype="multipart/form-data" class="product-form product-form-qv product-form--hide-variant-labels">
            <div class="selectorVariants {% if product.variants.size > 0 %} has-border{% endif %}">
                {% if variantCount > 1 %}
                  {% for option in product.options %}
                    {% include 'nov-swatch' with option %}
                  {% endfor %}
                {% endif %}
              
              <select name="id" id="productSelect" data-section="{{ section.id }}" {% if section.settings.product_swatch_enable %}class="enable_swatch hide"{% endif %}>
                {% for variant in product.variants %}
                {% if variant.available %}
                <option value="{{ variant.id }}" data-qty="{{ variant.inventory_quantity }}"{% if variant == product.selected_or_first_available_variant %} selected="selected"{% endif %}>{{ variant.title }}</option>
                {% else %}
                <option value="{{ variant.id }}" data-qty="{{ variant.inventory_quantity }}" disabled="disabled">{{ variant.title }} - {{ 'products.product.sold_out' | t }}</option>
                {% endif %}
                {% endfor %}
              </select>
            </div>
            <div class="has-border group-quantity d-flex align-items-center justify-content-between">
              <div class="product-form__item product-form__item--quantity">
                <label for="Quantity" class="quantity-selector">{{ 'cart.label.quantity' | t }}:</label>
                <div class="quick_view_qty">
                  <a href="javascript:void(0);" class="quick_view-qty quick_view-qty-minus">-</a>
                	<input type="number" id="Quantity" name="quantity" value="1" min="1" max="{{ current_variant.inventory_quantity }}" step="1" class="quantity-selector product-form__input" pattern="[0-9]*">
                  <a href="javascript:void(0);" class="quick_view-qty quick_view-qty-plus">+</a>
                </div>
              </div>
              <script>
                jQuery(document).on('click', '.cart-qty', function (e) {
                  e.preventDefault();

                  var $this = jQuery(this),
                      $qty = $this.siblings('.quantity-selector'),
                      $qtyinput = parseInt($qty.val()),
                      $step = parseInt($qty.attr('step')),
                      $min = parseInt($qty.attr('min')),
                      $max = parseInt($qty.attr('max'));

                  if ($this.hasClass('cart-qty-plus')) {
                    var $newqty = $qtyinput + $step;
                    if ($newqty > $max && $max > 0) {
                      $qty.val($max);
                      alert('Maximum Quantity: ' + $max);
                      return;
                    }
                  }
                  else if ($this.hasClass('cart-qty-minus')) {
                    var $newqty = $qtyinput - $step;
                    if ($newqty === 0) {
                      var last_qty = parseInt($qty.attr('value'));
                      $qty.val(last_qty);
                      return;
                    } else if ($newqty < $min) {
                      return;
                    } else if ($qtyinput < 0) {
                      alert('Invalid');
                      return;
                    }
                  }
                  $qty.val($newqty);
                });
            	</script>
              {% if settings.wishlist_enable %}
                <div class="productWishList">
                  <a class="wishlist btnProduct btnProductWishlist" 
                    data-icon-wishlist href="#" 
                    data-product-handle="{{ product.handle }}" 
                    data-id="{{ product.id | json }}">
                    <i class="zmdi zmdi-favorite"></i>
                    <span class="wishlist-text">Add to Wish List</span>
                  </a>
                </div>
              {% endif %}
            </div>
            <div>
              <div class="product-form__item product-form__item--submit">
                <button data-handle="{{ product.handle }}" type="submit" name="add" id="AddToCart" class="btn product-form__cart-submit{% if product.options.size == 1 and product.variants[0].title == 'Default Title' %} product-form__cart-submit--small{% endif %}">
                  <i class="icon_cart"></i>
                  <span id="AddToCartText">
                    {% unless current_variant.available %}
                      {{ 'products.product.sold_out' | t }}
                    {% else %}
                      {% if current_variant.inventory_policy == 'continue' and current_variant.inventory_quantity < 1 %}
                        {{ 'products.product.pre_order' | t }}
                      {% else %}
                        {{ 'products.product.add_to_cart' | t }}
                      {% endif %}
                    {% endunless %}
                  </span>
                </button>
              </div>
              {% if settings.payment_button_enable %}
                <div class="product-form__item product-form__item--checkout">
                  {% form 'product', product, class:form_classes, novalidate: 'novalidate', data-product-form: '' %}
                    {{ form | payment_button }}
                  {% endform %}
                </div>
              {% endif %}
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

</div>
{% unless product == empty %}
  <script type="application/json" id="ProductJson-templateQV">
    {{ product | json }}
  </script>
{% endunless %}


<script>
  {% if product.available %} 
  function updatePrice() {
    var regex = /([0-9]+[.|,][0-9]+[.|,][0-9]+)/g;
    var unitPriceTextMatch = jQuery('#ProductPrice-qv').text().match(regex);
    
    if (!unitPriceTextMatch) {
      regex = /([0-9]+[.|,][0-9]+)/g;
      unitPriceTextMatch = jQuery('#ProductPrice-qv').text().match(regex);     
    }
    
    if (unitPriceTextMatch) {
      var unitPriceText = unitPriceTextMatch[0];     
      var unitPrice = unitPriceText.replace(/[.|,]/g,'');
      var quantity = parseInt(jQuery('#Quantity').val());
      var totalPrice = unitPrice * quantity;

      var totalPriceText = Shopify.formatMoney(totalPrice, theme.money_format);
      regex = /([0-9]+[.|,][0-9]+[.|,][0-9]+)/g;     
      if (!totalPriceText.match(regex)) {
        regex = /([0-9]+[.|,][0-9]+)/g;
      } 
      totalPriceText = totalPriceText.match(regex)[0];

      var regInput = new RegExp(unitPriceText, "g"); 
      var totalPriceHtml = jQuery('#ProductPrice-qv').html().replace(regInput , totalPriceText);

      jQuery('.total-price span').html(totalPriceHtml);     
    }
  }
  jQuery('#Quantity').on('change', updatePrice);
  {% endif %}
  
  var selectCallbackProduct = function(variant, selector) {
    var moneyFormat = theme.moneyFormat;
        variant = variant,
        selector = selector;
    var $productImage = $('#ProductSection-templateQV #productThumbs .active img'),
        $addToCart = $('#ProductSection-templateQV #AddToCart'),
        $productPrice = $('#ProductSection-templateQV .product-price__price'),
        $comparePrice = $('#ProductSection-templateQV #ComparePrice-qv'),
        $quantityElements = $('#ProductSection-templateQV .quantity-selector, #ProductSection-templateQV label + #ProductSection-templateQV .js-qty'),
        $quantity = $('#ProductSection-templateQV .product-form__item--quantity'),
        $itemquantity = $('#ProductSection-templateQV .product-form__item--quantity'),
        $addToCartText = $('#ProductSection-templateQV #AddToCartText');
    if (variant) {
        var form = $('#' + selector.domIdPrefix).closest('form');
        for (var i = 0, length = variant.options.length; i < length; i++) {
          var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] + '"]');
          if (radioButton.size()) {
              radioButton.get(0).checked = true;
          }
        }
        if (variant.featured_image) {
          var newImage = variant.featured_image;
          var element = $productImage[0];
          Shopify.Image.switchImage(newImage, element, function(src, imgObject, el) {
            $('.thumbItem').parent().removeClass('active');
            $('.thumbItem[data-image-id="'+imgObject.id+'"]').parent().addClass('active');
            $('.thumbItem[data-image-id="'+imgObject.id+'"]').find('img').attr('src', src);
            $("#productThumbs .owl-carousel").trigger("to.owl.carousel", [$('.thumbItem[data-image-id="'+imgObject.id+'"]').attr('data-position'), 1]);
          });
        }
        if (variant.available) {
            var d_qty = $('#productSelect :selected').data('qty');
            if (d_qty < 1) {
                $addToCartText.html("{{ 'products.product.pre_order' | t }}");
            } else {
                $addToCartText.html("{{ 'products.product.add_to_cart' | t }}");
            }
            $quantity.show();
            $addToCart.removeClass('disabled').prop('disabled', false);
            $quantityElements.show();
        } else {
            $quantity.hide();
            $addToCart.addClass('disabled').prop('disabled', true);
            $addToCartText.html("{{ 'products.product.sold_out' | t }}");
            $quantityElements.hide();
        }
        $productPrice.html(theme.Currency.formatMoney(variant.price, moneyFormat));
        if (variant.compare_at_price > variant.price) {
            $comparePrice.html(theme.Currency.formatMoney(variant.compare_at_price, moneyFormat)).show();
        } else {
            $comparePrice.hide();
        }
        if ($('#currencies').length != 0) {
            Currency.convertAll(shopCurrency, $('#currencies span.selected').attr('data-currency'));
        }
    } else {
      $quantity.hide();
      $addToCart.addClass('disabled').prop('disabled', true);
      $addToCartText.html("{{ 'products.product.unavailable' | t }}");
      $quantityElements.hide();
    }
  };

  $(document).ready(function() {
    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallbackProduct,
      enableHistoryState: false
    });

    {% if product.available and product.options.size > 0 %}
      Shopify.linkOptionSelectors({{ product | json }});
    {% endif %}

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>